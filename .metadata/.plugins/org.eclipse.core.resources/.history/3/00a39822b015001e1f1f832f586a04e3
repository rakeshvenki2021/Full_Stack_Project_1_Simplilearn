package fileInfoExample;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Date;


public class fileInfo { 
	public static void main(String[] args) { 
		// Create a File represents a path.
		System.out.println("**********WELCOME TO THE FILE MANAGER**********");
		
		System.out.println("\r\n"
				+ "__________    _____   ____  __.___________ _________ ___ ___  \r\n"
				+ "\\______   \\  /  _  \\ |    |/ _|\\_   _____//   _____//   |   \\ \r\n"
				+ " |       _/ /  /_\\  \\|      <   |    __)_ \\_____  \\/    ~    \\\r\n"
				+ " |    |   \\/    |    \\    |  \\  |        \\/        \\    Y    /\r\n"
				+ " |____|_  /\\____|__  /____|__ \\/_______  /_______  /\\___|_  / \r\n"
				+ "        \\/         \\/        \\/        \\/        \\/       \\/  \r\n"
				+ "");
		File apath = new File("C:\\Program Files (x86)");
		//List of all files and directories 
		String contents[] = apath.list();
		System.out.println("List of all files and directories in the specified folders");
		for(int i =0; i< contents.length; i++) {
			System.out.println(contents[i]);
		}

		// Check if exists.
		System.out.println("Path exists? " + apath.exists()); 
		if (apath.exists()) { 
			// Check if 'apath' is a directory.
			System.out.println("Directory? " + apath.isDirectory());

			// Check 'apath' is a Hidden path.
			System.out.println("Hidden? " + apath.isHidden());

			// Simple name.
			System.out.println("Simple Name: " + apath.getName());

			// Absolute path.
			System.out.println("Absolute Path: " + apath.getAbsolutePath());

			// Check file size (in bytes):
			System.out.println("Length (bytes): " + apath.length());

			// Last modify (in milli second)
			long lastMofifyInMillis = apath.lastModified();
			Date lastModifyDate = new Date(lastMofifyInMillis); 
			System.out.println("Last modify date: " + lastModifyDate); 
		} 
		
		/*File newDirectory = new File("C:\\Full Stack");
		newDirectory.mkdir();
		System.out.println("newDirectory = " + newDirectory);
		*/
		File file = new File("C:\\Full Stack\\music.txt"); //initialize File object and passing path as argument  
		boolean result;  
		try   
		{  
		result = file.createNewFile();  //creates a new file  
		if(result)      // test if successfully created a new file  
		{  
		System.out.println("file created "+file.getCanonicalPath()); //returns the path string  
		}  
		else  
		{  
		System.out.println("File already exist at location: "+file.getCanonicalPath());  
		}  
		}   
		catch (IOException e)   
		{  
		e.printStackTrace();    //prints exception if any  
		}         
		}  
		
	
		
	} 

